// Code generated by github.com/gokultp/go-envparser. DO NOT EDIT.
package configs

import (
	"fmt"
	"os"
	"strconv"

	commonconfigs "github.com/firstcontributions/backend/internal/configs"
	"github.com/gokultp/go-envparser/pkg/envdecoder"
)

func (t *Config) DecodeEnv() error {
	_recLog := commonconfigs.LogConfig{}
	if err := envdecoder.Decode(&_recLog); err != nil {
		return fmt.Errorf("type commonconfigs.LogConfignot implemts env Decoder interface, %w", envdecoder.ErrDecoderNotImplemented)
	}
	t.Log = &_recLog
	_recRedisconfig := RedisConfig{}
	if err := envdecoder.Decode(&_recRedisconfig); err != nil {
		return fmt.Errorf("type RedisConfignot implemts env Decoder interface, %w", envdecoder.ErrDecoderNotImplemented)
	}
	t.RedisConfig = &_recRedisconfig
	if _recPortStr := os.Getenv("GATEWAY_PORT"); _recPortStr != "" {
		_recPort := _recPortStr
		t.Port = &_recPort
	}
	if _recSessionttldaysStr := os.Getenv("SESSION_TTL_DAYS"); _recSessionttldaysStr != "" {
		_recSessionttldays64, err := strconv.ParseInt(_recSessionttldaysStr, 10, 32)
		if err != nil {
			return err
		}
		_recSessionttldays := int(_recSessionttldays64)
		t.SessionTTLDays = &_recSessionttldays
	}
	if _recHashkeyStr := os.Getenv("HASH_KEY"); _recHashkeyStr != "" {
		_recHashkey := _recHashkeyStr
		t.HashKey = &_recHashkey
	}
	if _recBlockkeyStr := os.Getenv("BLOCK_KEY"); _recBlockkeyStr != "" {
		_recBlockkey := _recBlockkeyStr
		t.BlockKey = &_recBlockkey
	}
	_recGithubconfig := commonconfigs.GithubConfig{}
	if err := envdecoder.Decode(&_recGithubconfig); err != nil {
		return fmt.Errorf("type commonconfigs.GithubConfignot implemts env Decoder interface, %w", envdecoder.ErrDecoderNotImplemented)
	}
	t.GithubConfig = &_recGithubconfig
	_recProfilemanager := commonconfigs.ProfileManager{}
	if err := envdecoder.Decode(&_recProfilemanager); err != nil {
		return fmt.Errorf("type commonconfigs.ProfileManagernot implemts env Decoder interface, %w", envdecoder.ErrDecoderNotImplemented)
	}
	t.ProfileManager = &_recProfilemanager
	return nil
}
